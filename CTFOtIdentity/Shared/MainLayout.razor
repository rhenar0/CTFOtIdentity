@using CTFOtIdentity.Components
@using CTFOtIdentity.SQLManagement.Definitions
@using CTFOtIdentity.SQLManagement.Services
@inherits LayoutComponentBase

@inject DialogService DialogService
@inject ICTFGlobalServices _GlobalServices

<PageTitle>CTFOt</PageTitle>

<div class="page">
    <main>
        <RadzenDialog/>
        <RadzenNotification/>
        <RadzenContextMenu/>
        <RadzenTooltip/>
        <RadzenLayout>
            <RadzenHeader>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
                    <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />
                    <RadzenLabel Text="Challenge Francilien" />
                    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Shade="Shade.Lighter" class="rz-shadow-0" Style="display: block; margin-left: auto; margin-right: 20px">
                            Timer
                            <RadzenBadge BadgeStyle="BadgeStyle.Secondary" IsPill="@true" Text="@GetRemainingTime(GetDate)" class="rz-ml-2" />
                            </RadzenButton>
                </RadzenStack>
            </RadzenHeader>
            <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
                <RadzenPanelMenu>
                    <RadzenPanelMenuItem Text="Accueil" Icon="home" Path=""/>
                    <AuthorizeView>
                        <NotAuthorized>
                            <RadzenPanelMenuItem Text="Score" Icon="scoreboard" Path="Scoring"/>
                            <RadzenPanelMenuItem Text="S'identifier" Icon="login" Path="Identity/Account/Login"/>
                        </NotAuthorized>
                        <Authorized>
                            <RadzenPanelMenuItem Text="Challenges" Icon="receipt" Path="Challenges"/>
                            <RadzenPanelMenuItem Text="Score" Icon="scoreboard" Path="Scoring"/>
                            <RadzenPanelMenuItem Text="Mon profil" Icon="person" Path="Identity/Account/Manage"/>
                        </Authorized>
                    </AuthorizeView>
                </RadzenPanelMenu>
            </RadzenSidebar>
            <RadzenBody>
                <div class="rz-p-4">
                    @Body
                </div>
            </RadzenBody>
            <RadzenFooter>
                Made with <RadzenIcon Icon="coffee" Class="rz-text-danger" Style="align-self: center"/> by Rhenar for OteriHack & Oteria Cyber School
            </RadzenFooter>
        </RadzenLayout>
            
        @code {
            bool sidebar1Expanded = true;
        }
    </main>
</div>

@code {

    List<CTFGlobal> GetGlobal;
    String GetDate;
    

    protected override async Task OnInitializedAsync()
    {

        GetGlobal = await _GlobalServices.GetGlobalAsync();
        GetDate = GetGlobal[0].Duration;
        var timer = new Timer(new TimerCallback(_ => InvokeAsync(StateHasChanged)), null, 0, 1000);
    }

    public static String GetRemainingTime(string endDateString)
    {
        DateTime endDate = DateTime.Parse(endDateString);
        DateTime currentDate = DateTime.Now;
        TimeSpan remainingTime =  endDate - currentDate;
        String remainingTimeString = remainingTime.ToString(@"hh\:mm\:ss");

        return remainingTimeString;
    }

}