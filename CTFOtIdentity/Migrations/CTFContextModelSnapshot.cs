// <auto-generated />
using CTFOtIdentity.SQLManagement.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CTFOtIdentity.Migrations
{
    [DbContext(typeof(CTFContext))]
    partial class CTFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("CTFOtIdentity.SQLManagement.Definitions.CTFCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CTFCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "OSINT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Web"
                        },
                        new
                        {
                            Id = 3,
                            Name = "OT"
                        });
                });

            modelBuilder.Entity("CTFOtIdentity.SQLManagement.Definitions.CTFChalls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDCategories")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CTFChalls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            IDCategories = 1,
                            Image = "https://media.discordapp.net/attachments/1023901955510247484/1118145598164570202/test.jpg?width=1400&height=1000",
                            Name = "Avis de recherche"
                        },
                        new
                        {
                            Id = 2,
                            Actif = true,
                            IDCategories = 2,
                            Image = "https://kagi.com/proxy/python-img-113865.png?c=voW4nu_Ss_siAJXayRlkd1x6ooI6OHxRvSyWT_gIo5cJ9MDibh3pf9mualar0kQOZVl9EAKxRXOwXQWgenkgRGVEJgEe797Fn0n7onmLjFM%3D",
                            Name = "Timing Attack"
                        },
                        new
                        {
                            Id = 3,
                            Actif = true,
                            IDCategories = 2,
                            Image = "https://kagi.com/proxy/avalanche.gif?c=fRA6D874CkqQBEO81ob1I4iGGnwAjsUJVE65fgh7TvB_OM0tNdzWIc0bk3roArcSUsFMQpHnQqnb5CfpcA6jpT_TCtYEW9ebLy9L3XCHP5M%3D",
                            Name = "Target : Admin"
                        },
                        new
                        {
                            Id = 4,
                            Actif = true,
                            IDCategories = 3,
                            Image = "https://kagi.com/proxy/criquet-oreille-cauchemar-jiminy.gif?c=qCsIsNsCPK2EG-5tqKDsPj-nT0VC9UFMOm38yykNCVkMmpcP4jc6JopGXpUWDdX4Zp9qVd8JYA831XDwJs98cuVEq_vudsAI4CJ4kmetM7Wyw9MgTpIDgubGtZScdD1wPo2jx281jSQc1jrj0kKCxQ%3D%3D",
                            Name = "6602"
                        });
                });

            modelBuilder.Entity("CTFOtIdentity.SQLManagement.Definitions.CTFEtapes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LinkedChalls")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CTFEtapes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            Categorie = "OSINT",
                            Description = "A ce qu'il parait vous avez du talent pour retrouver les gens, ça tombe bien, nous cherchons ce genre de talent.\nUn étudiant de l'IAE, Bobby Latrouille, a soudainement disparu, sur ordre de Philippe Lépinard nous vous demandons d'enquêter sur son cas et de le retrouver.\n\nOn a entendu qu'il était sur des réseaux sociaux, trouvez ses comptes, il y aura surement des informations capitales pour l'enquête\n\nFormat du flag: OTH{exemple_de_flag}",
                            Flag = "OTH{c_3s5_mo1_w3sh}",
                            Img = "https://media.discordapp.net/attachments/1023901955510247484/1118106682128613437/Black_and_White_Simple_Framed_Wanted_Poster.png?width=824&height=1166",
                            LinkedChalls = 1,
                            Name = "Mystérieux Bobby",
                            Order = 1,
                            Points = 100
                        },
                        new
                        {
                            Id = 2,
                            Actif = true,
                            Categorie = "OSINT",
                            Description = "Bon travail jeune pousse ! On est sur une bonne piste pour le retrouver.\nIl parle de ses dernières vacances sur son Twitter.\nQuelle est l'adresse de cette maison ? Bobby a sympathisé avec le gérant du lieu, où était ce dernier en février 2020 ? Il a trouvé le chien de la famille super mignon, de quelle race était-il ?\n\nFormat du flag: OTH{ville_race} ",
                            Flag = "OTH{courchevel_cocker}",
                            Img = "https://media.discordapp.net/attachments/1023901955510247484/1118103599147405352/challOsintPhoto2.jpg?width=1340&height=880",
                            LinkedChalls = 1,
                            Name = "Un peu de soleil ?",
                            Order = 2,
                            Points = 150
                        },
                        new
                        {
                            Id = 3,
                            Actif = true,
                            Categorie = "OSINT",
                            Description = "Bobby, dans sa cavale, s’est fait attraper à la frontière d’un pays européen.\nNous avons reçu une clé USB étrange de la part de la douane qui avait fouillé notre cible.\nIl doit forcément y avoir des pistes…vous y comprenez quelque chose vous ?\n\nFormat du flag: OTH{flag_trop_cool}",
                            Flag = "OTH{d3caler_c3st_l0urd}",
                            Img = "https://media.discordapp.net/attachments/1023901955510247484/1118104146894143488/challOsintPhoto3.jpg?width=1554&height=1166",
                            LinkedChalls = 1,
                            Name = "Etrange fichier",
                            Order = 3,
                            Points = 200
                        },
                        new
                        {
                            Id = 4,
                            Actif = true,
                            Categorie = "OSINT",
                            Description = "La douane nous a fourni des informations complémentaires. Ils ont réussi à exfiltrer certaines images de son téléphone. \nPouvez-vous trouver le collège où Bobby a fait sa scolarité ?\n\nFormat du flag: OTH{college_rene_malleville}",
                            Flag = "OTH{college_andre_chenier}",
                            Img = "https://media.discordapp.net/attachments/1023901955510247484/1118104418211086396/challOsintPhoto4.png?width=1864&height=1164",
                            LinkedChalls = 1,
                            Name = "La belle époque",
                            Order = 4,
                            Points = 250
                        },
                        new
                        {
                            Id = 5,
                            Actif = true,
                            Categorie = "OSINT",
                            Description = "Bobby parle d'une professeur qu'il a eu pendant sa période lycée sur son Twitter.\nNous devons la retrouver pour lui poser des questions, peut-être a-t-elle eu un contact avec lui récemment ?\n\nFormat du flag: OTH{prenom_nom}",
                            Flag = "OTH{isabelle_balard}",
                            Img = "https://media.discordapp.net/attachments/1023901955510247484/1118104750852931584/challOsintPhoto5.jpg?width=1748&height=1166",
                            LinkedChalls = 1,
                            Name = "Un complice ?",
                            Order = 5,
                            Points = 300
                        },
                        new
                        {
                            Id = 6,
                            Actif = true,
                            Categorie = "OSINT",
                            Description = "Bobby et son professeur se sont donnés rendez-vous pour se voir après de longues années, en lui parlant d’un “ lourd secret “ dont il devait lui faire part. Malheureusement, il n’a pas pu se rendre sur le lieu du rendez-vous, alors il a laissé un message pour son professeur sur ce même lieu, entre les mains de l’hôtesse qui garde ce lieu. Allez intercepter le message avant que son professeur ne le récupère.\n\nPour retrouver le lieu, voici le message de Bobby a son professeur lorsqu’il lui a donné rendez-vous :\n\"Je vous propose que l’on se voie dans l’accueil de l’entreprise qui devait m’accueillir pour un contrat d’apprentissage. Elle se trouve dans le bâtiment Clever, et son logo est de teinte bleue. Le PDG a un nom à consonance hollandaise \"\n\nAttention, pour espérer récupérer le message, faites vous passer pour la fille/fils de Isabelle :)\nFormat du flag : OTH{bouhbouh}",
                            Flag = "OTH{b0bby_3st_r1ch3}",
                            Img = "https://media.discordapp.net/attachments/1023901955510247484/1118105763966095360/challOsintPhoto6.gif?width=1280&height=848",
                            LinkedChalls = 1,
                            Name = "L'ultime révélation",
                            Order = 6,
                            Points = 350
                        },
                        new
                        {
                            Id = 7,
                            Actif = true,
                            Categorie = "Web",
                            Description = "Sortez votre meilleur éditeur de texte car ça va scripter fort...\n\nFormat du flag : OTH{bouhbouh}",
                            Flag = "OTH{hPM5OfVV73}",
                            Img = "https://kagi.com/proxy/python-img-113865.png?c=voW4nu_Ss_siAJXayRlkd1x6ooI6OHxRvSyWT_gIo5cJ9MDibh3pf9mualar0kQOZVl9EAKxRXOwXQWgenkgRGVEJgEe797Fn0n7onmLjFM%3D",
                            LinkedChalls = 2,
                            Name = "Timing Attack",
                            Order = 1,
                            Points = 500
                        },
                        new
                        {
                            Id = 8,
                            Actif = true,
                            Categorie = "Web",
                            Description = "Bon bon bon, c'est où déjà ce truc ?...\n\nFormat du flag : OTH{user_password}",
                            Flag = "OTH{Jason_MonSuperMotDeP@sse}",
                            Img = "https://kagi.com/proxy/avalanche.gif?c=fRA6D874CkqQBEO81ob1I4iGGnwAjsUJVE65fgh7TvB_OM0tNdzWIc0bk3roArcSUsFMQpHnQqnb5CfpcA6jpT_TCtYEW9ebLy9L3XCHP5M%3D",
                            LinkedChalls = 3,
                            Name = "Request Avalanche",
                            Order = 1,
                            Points = 250
                        },
                        new
                        {
                            Id = 9,
                            Actif = true,
                            Categorie = "Web",
                            Description = "Deux biscuits dans un four. Un cookie se tourne vers l'autre cookie et dit, il fait vraiment chaud ici.\nL'autre cookie crie, Ahhh ! Un cookie qui parle !\n\nFormat du flag : OTH{bouhbouh}",
                            Flag = "OTH{B3c@rfuL_w1tH_Jwt_1n_Pr0D}",
                            Img = "https://kagi.com/proxy/avalanche.gif?c=fRA6D874CkqQBEO81ob1I4iGGnwAjsUJVE65fgh7TvB_OM0tNdzWIc0bk3roArcSUsFMQpHnQqnb5CfpcA6jpT_TCtYEW9ebLy9L3XCHP5M%3D",
                            LinkedChalls = 3,
                            Name = "JWT",
                            Order = 2,
                            Points = 400
                        },
                        new
                        {
                            Id = 10,
                            Actif = true,
                            Categorie = "OT",
                            Description = "Vous venez de recevoir une mystérieuse image et vous savez qu'elle cache quelque chose... peut-être qu'en fouillant dedans...\n\nFormat du flag : OTH{Ym9uam91cmxlc2xvdXN0aXF1ZXN2b3Vzc2F2ZXpxdWV2b3Vz6nRlc2Ryb2xlPw==}",
                            Flag = "OTH{aHR0cDovL2JsdWUtcHJvamVjdC5jbzpYWFhYL2luZGV4Lmh0bWw=}",
                            Img = "https://kagi.com/proxy/criquet-oreille-cauchemar-jiminy.gif?c=qCsIsNsCPK2EG-5tqKDsPj-nT0VC9UFMOm38yykNCVkMmpcP4jc6JopGXpUWDdX4Zp9qVd8JYA831XDwJs98cuVEq_vudsAI4CJ4kmetM7Wyw9MgTpIDgubGtZScdD1wPo2jx281jSQc1jrj0kKCxQ%3D%3D",
                            LinkedChalls = 4,
                            Name = "The Entry",
                            Order = 1,
                            Points = 50
                        },
                        new
                        {
                            Id = 11,
                            Actif = true,
                            Categorie = "OT",
                            Description = "Il semblerait qu'ils adorent les images ici ! Encore une autre... \n\nFormat du flag : OTH{fezfzefzefze.onion}",
                            Flag = "OTH{loqt6lh5n6wezgetjjhgz7ps43bsvwv3gz75onsbmvqpchqqmj3kwzyd.onion}",
                            Img = "https://kagi.com/proxy/latest?c=KuL4k4ESLwwqNjT2PZ7j6wo1XWKHMG-wlO-H94mCuQtna7sY6pang3SFZGs3Egq9ocolsPf6VY2xYpBFy-xHQFxLhE_l5oEZZdzXuO_mvT8txNU1-H0hLLl6POsM_TCM25fRRptkTAsXv9NGpWK4FySG0VioKCvvVlNrYqXSsWU%3D",
                            LinkedChalls = 4,
                            Name = "Outguess",
                            Order = 2,
                            Points = 150
                        },
                        new
                        {
                            Id = 12,
                            Actif = true,
                            Categorie = "OT",
                            Description = "Maintenant faut s'identifier ??? Et puis quoi encore ? \n\nFormat du flag : OTH{feozpfjeziofnzf.html}",
                            Flag = "OTH{f60626d86938f3df8cbc2e53f7a1ad1154a5c6ba.html}",
                            Img = "https://kagi.com/proxy/identifier-les-references-d-un-outil-electroportatif-000676004-product_zoom.jpg?c=-eIzMiD35CJre_o-hD2FBAfCytz7MygLWUcxuhGcitVt4GyO_9Cn3auasH_gPSDv5-rizDI6x2WQHPb6KBj_WvBXUKnkjcwdTWDsesPH_LLBLMGm0k6lffJDiURxHlEYslHI0bLgtl02yIPlt5blMO3VBwuauM8AMJX9mSlrmQxqgHjhe6efrmwoQQsAn-3j",
                            LinkedChalls = 4,
                            Name = "SQL Here I Come",
                            Order = 3,
                            Points = 150
                        });
                });

            modelBuilder.Entity("CTFOtIdentity.SQLManagement.Definitions.CTFGlobal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CTFGlobal");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = "2023-06-14 18:00:00"
                        });
                });

            modelBuilder.Entity("CTFOtIdentity.SQLManagement.Definitions.CTFRessources", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAssociatedEta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CTFRessources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdAssociatedEta = 3,
                            Link = "https://cdn.discordapp.com/attachments/850005023218991105/1115609930272088095/weird_file.wav",
                            Name = "weird_file.wav",
                            Type = "FILES"
                        },
                        new
                        {
                            Id = 2,
                            IdAssociatedEta = 4,
                            Link = "https://media.discordapp.net/attachments/850005023218991105/1115610729173762208/image1.png?width=1220&height=1166",
                            Name = "image1.png",
                            Type = "FILES"
                        },
                        new
                        {
                            Id = 3,
                            IdAssociatedEta = 4,
                            Link = "https://media.discordapp.net/attachments/850005023218991105/1115610728397799474/image2.png?width=1062&height=1166",
                            Name = "image2.png",
                            Type = "FILES"
                        },
                        new
                        {
                            Id = 4,
                            IdAssociatedEta = 7,
                            Link = "http://192.168.208.17/",
                            Name = "Site Web",
                            Type = "LINK"
                        },
                        new
                        {
                            Id = 5,
                            IdAssociatedEta = 8,
                            Link = "http://192.168.208.18/",
                            Name = "Site Web",
                            Type = "LINK"
                        },
                        new
                        {
                            Id = 6,
                            IdAssociatedEta = 9,
                            Link = "http://192.168.208.18/",
                            Name = "Site Web",
                            Type = "LINK"
                        },
                        new
                        {
                            Id = 7,
                            IdAssociatedEta = 10,
                            Link = "http://192.168.208.16/img.png",
                            Name = "6602",
                            Type = "FILES"
                        });
                });

            modelBuilder.Entity("CTFOtIdentity.SQLManagement.Definitions.CTFScoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEtape")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPlayer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTeam")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CTFScoring");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = "2023-06-14 15:30:00",
                            IdEtape = 999,
                            IdPlayer = 1,
                            IdTeam = 1,
                            Points = 0
                        },
                        new
                        {
                            Id = 2,
                            DateTime = "2023-06-14 15:30:00",
                            IdEtape = 999,
                            IdPlayer = 8,
                            IdTeam = 2,
                            Points = 0
                        },
                        new
                        {
                            Id = 3,
                            DateTime = "2023-06-14 15:30:00",
                            IdEtape = 999,
                            IdPlayer = 16,
                            IdTeam = 3,
                            Points = 0
                        });
                });

            modelBuilder.Entity("CTFOtIdentity.SQLManagement.Definitions.CTFTeams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChallsSucceed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChkPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Members")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CTFTeams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChallsSucceed = "[{\"etaId\": [0]}]",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Members = "{2, 3, 4, 5, 6, 7}",
                            Name = "IA Runners",
                            Score = 0
                        },
                        new
                        {
                            Id = 2,
                            ChallsSucceed = "[{\"etaId\": [0]}]",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Members = "{8, 9, 10, 11, 12}",
                            Name = "PINMODE",
                            Score = 0
                        },
                        new
                        {
                            Id = 3,
                            ChallsSucceed = "[{\"etaId\": [0]}]",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Members = "{13, 14, 15, 16, 17, 18, 19, 20}",
                            Name = "2C2K",
                            Score = 0
                        },
                        new
                        {
                            Id = 4,
                            ChallsSucceed = "[{\"etaId\": [0]}]",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Members = "{21, 22}",
                            Name = "Les poulets",
                            Score = 0
                        },
                        new
                        {
                            Id = 999,
                            ChallsSucceed = "[{\"etaId\": [0]}]",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Members = "{1, 26, 27}",
                            Name = "Admin",
                            Score = 0
                        });
                });

            modelBuilder.Entity("CTFOtIdentity.SQLManagement.Definitions.CTFUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedChalls")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChkPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CTFUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedChalls = "{}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "hugo.chassaing@orange.fr",
                            Pseudo = "Rhenar",
                            Score = 0L,
                            TeamId = 999
                        },
                        new
                        {
                            Id = 2,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "anas.baroudipro@gmail.com",
                            Pseudo = "AnasBaroudi",
                            Score = 0L,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "clement.franqueville@gmail.com",
                            Pseudo = "ClementFranqueville",
                            Score = 0L,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "titouancarn71@gmail.com",
                            Pseudo = "TitouanCarn",
                            Score = 0L,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "yanismakdoud@hotmail.com",
                            Pseudo = "YanisMakdoud",
                            Score = 0L,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "nora.brahami@etu.u-pec.fr",
                            Pseudo = "NoraBrahami",
                            Score = 0L,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 7,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "maryam.hanou@gmail.com",
                            Pseudo = "MaryamBrahami",
                            Score = 0L,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 8,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "lina.boudjettou@gmail.com",
                            Pseudo = "LinaBoudjettou",
                            Score = 0L,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 9,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "lahna.ould@hotmail.com",
                            Pseudo = "LahnaOuld",
                            Score = 0L,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 10,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "erwan.ahmed94@gmail.com",
                            Pseudo = "ErwanAhmed",
                            Score = 0L,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 11,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "hebbalbouchra@gmail.com",
                            Pseudo = "BouchraHebbal",
                            Score = 0L,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 12,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "samir.amara2207@gmail.com",
                            Pseudo = "SamirAmara",
                            Score = 0L,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 13,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "cassandre.canvot@etu.u-pec.fr",
                            Pseudo = "CassandreCanvot",
                            Score = 0L,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 14,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "krithika.yasonthiram@etu.u-pec.fr",
                            Pseudo = "KrithikaYasonthiram",
                            Score = 0L,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 15,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "callista.chapelle@etu.u-pec.fr",
                            Pseudo = "CallistaChapelle",
                            Score = 0L,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 16,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "ilyes.hmadi@etu.u-pec.fr",
                            Pseudo = "IlyesHmadi",
                            Score = 0L,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 17,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "lukas.dreyer@etu.u-pec.fr",
                            Pseudo = "LukasDreyer",
                            Score = 0L,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 18,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "cynthia.sabathier@gmail.com",
                            Pseudo = "CynthiaSabathier",
                            Score = 0L,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 19,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "coralie.cerson@etu.u-pec.fr",
                            Pseudo = "CoralieCerson",
                            Score = 0L,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 20,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "axel.david-lebastard@etu.u-pec.fr",
                            Pseudo = "AxelDavidLebastard",
                            Score = 0L,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 21,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "thibault.bouchet@etu.u-pec.fr",
                            Pseudo = "ThibaultBouchet",
                            Score = 0L,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 22,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "james.blainville@etu.u-pec.fr",
                            Pseudo = "JamesBlainville",
                            Score = 0L,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 23,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "alex.le@etu.u-pec.fr",
                            Pseudo = "AlexLe",
                            Score = 0L,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 24,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "julie.pereira@etu.u-pec.fr",
                            Pseudo = "JuliePereira",
                            Score = 0L,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 25,
                            AssignedChalls = "{0}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "ulric.sieys@etu.u-pec.fr",
                            Pseudo = "UlricSieys",
                            Score = 0L,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 26,
                            AssignedChalls = "{}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "saber.sakkhal@oteria.fr",
                            Pseudo = "Saber",
                            Score = 0L,
                            TeamId = 999
                        },
                        new
                        {
                            Id = 27,
                            AssignedChalls = "{}",
                            ChkPassword = "a7e4ec9e259246db346ac88b10f32901",
                            Mail = "valentine.pernot@oteria.fr",
                            Pseudo = "Valentine",
                            Score = 0L,
                            TeamId = 999
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
