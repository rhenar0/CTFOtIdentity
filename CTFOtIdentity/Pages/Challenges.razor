@page "/Challenges"
@using CTFOtIdentity.SQLManagement.Definitions
@using CTFOtIdentity.SQLManagement.Services
@using CTFOtIdentity.Components

@inject DialogService DialogService
@inject ICTFCategroiesServices _categoriesServices
@inject ICTFChallsServices _challsServices
@inject ICTFEtapesServices _etapesServices
@inject DialogCardOpen_ShowEtapes _DCO_ShowEtapes

<h3>Challenges</h3>
<AuthorizeView>
    <Authorized>
        <RadzenTabs RenderMode="TabRenderMode.Client" TabPosition="TabPosition.Left">
            <Tabs>
                @foreach (var cat in categories)
                {
                    <RadzenTabsItem Text=@cat.Name>
                        <RadzenRow class="rz-text-align-center" Gap="1rem">
                            @foreach (var chall in challs)
                            {
                                @if (chall.IDCategories == cat.Id)
                                {
                                    <RadzenColumn Size="4">
                                        <RadzenCard Style="flex: 1;">
                                            <RadzenStack AlignItems="AlignItems.Center" Gap="1rem">
                                                <RadzenImage Path=@chall.Image Style="width: 80px; height: 80px; border-radius: 50%"/>
                                                <RadzenStack>
                                                    <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.P" TextAlign="TextAlign.Center">@chall.Name</RadzenText>
                                                    <RadzenText TextStyle="TextStyle.Body2" TextAlign="TextAlign.Center">Petite description</RadzenText>
                                                    <RadzenButton Click=@(args => OpenChall(chall.Name, chall.Id))>Lancer !</RadzenButton>
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenCard>
                                    </RadzenColumn>
                                }
                            }
                        </RadzenRow>
                    </RadzenTabsItem>
                }
            </Tabs>
        </RadzenTabs>
    </Authorized>
    <NotAuthorized>
        <h1>Vous devez être connecté !</h1>
        <p>N'essayez pas de contourner la plateforme, je vous vois :eyes: :lips: :eyes:</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    List<CTFCategories> categories;
    List<CTFChalls> challs;

    async Task OpenChall(string name, int eid) 
    {   
        await DialogService.OpenAsync<DialogCardOpen_ShowEtapes>(name, new Dictionary<string, object> {{"eid", eid}}, new DialogOptions() { Width = "800px", Height = "800px", Resizable = false, Draggable = false });
    }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        categories = await _categoriesServices.GetCategoriesAsync();
        challs = await _challsServices.GetChallsAsync();
    }
}